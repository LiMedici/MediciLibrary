<?xml version="1.0" encoding="utf-8"?>
<resources xmlns:tools="http://schemas.android.com/tools">

    <style name="Theme.private" parent="Theme.AppCompat">
        <!-- 复写3个主要的色彩. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>

        <!-- Genius style -->
        <item name="gTextViewStyle">@style/Genius.Widget.TextView</item>
        <item name="gButtonStyle">@style/Genius.Widget.Button</item>
        <item name="gFloatActionButtonStyle">@style/Genius.Widget.FloatActionButton</item>
        <item name="gSeekBarStyle">@style/Genius.Widget.SeekBar</item>
        <item name="gCheckBoxStyle">@style/Genius.Widget.CompoundButton.CheckBox</item>
        <item name="gEditTextStyle">@style/Genius.Widget.EditText</item>
        <item name="gLoadingStyle">@style/Genius.Widget.Loading</item>
        <item name="gImageViewStyle">@style/Genius.Widget.ImageView</item>

        <!--背景色-->
        <item name="android:windowBackground">@color/windowsBackground</item>

        <!--设置没有Title-->
        <item name="windowActionBar">false</item>
        <item name="android:windowNoTitle">true</item>
        <item name="windowNoTitle">true</item>
        <!--ToolBar高度-->
        <item name="actionBarSize">@dimen/len_48</item>
        <!-- 左上角返回Icon -->
        <item name="homeAsUpIndicator">@drawable/ic_back</item>

        <!--初始化自己定义的3个属性值-->
        <item name="toolbarTitleSize">@dimen/font_18</item>
        <item name="toolbarTitleColor">@color/black_alpha_224</item>
        <item name="toolbarMenuIconColor">@color/black_alpha_224</item>

    </style>

    <style name="AppTheme.Base" parent="Theme.private" />

    <!-- Base application theme. -->
    <style name="AppTheme" parent="AppTheme.Base">
        <!--
        <item name="toolbarStyle">@style/Widget.Toolbar</item>
        <item name="toolbarNavigationButtonStyle">@style/Widget.ToolbarNavigationButtonStyle</item>
        <item name="actionOverflowButtonStyle">@style/Widget.ActionButton.Overflow</item>
        <item name="actionOverflowMenuStyle">@style/Widget.PopupMenu.Overflow</item>
        -->
        <item name="android:windowAnimationStyle">@style/windowAnimationStyle</item>
        <!--顶部导航条中的Icon和二级字体的颜色-->
        <item name="colorControlNormal">@color/white_alpha_240</item>
        <item name="colorControlActivated">@color/textPrimary</item>
    </style>

    <!--style里面设置了android:windowIsTranslucent这个属性 所有要继承Animation.Translucent-->
    <style name="windowAnimationStyle" parent="@android:style/Animation.Activity">
        <item name="android:activityOpenEnterAnimation">@anim/right_in</item>
        <item name="android:activityOpenExitAnimation">@anim/right_out</item>
        <item name="android:activityCloseEnterAnimation">@anim/left_in</item>
        <item name="android:activityCloseExitAnimation">@anim/left_out</item>
    </style>

    <style name="windowAnimationStyle_translucent" parent="@android:style/Animation.Translucent">
        <item name="android:windowEnterAnimation">@anim/right_in</item>
        <item name="android:windowExitAnimation">@anim/left_out</item>
    </style>

    <style name="AppTheme.TransStatusBar.Base" parent="AppTheme">
        <!--去除顶部的状态栏-->
        <item name="android:windowTranslucentStatus" tools:targetApi="kitkat">true</item>
        <item name="android:windowIsTranslucent">true</item>
        <item name="android:windowAnimationStyle">@style/windowAnimationStyle_translucent</item>
        <item name="android:windowIsFloating">false</item>
        <item name="android:windowFrame">@null</item>
    </style>

    <!--全屏的主题-->
    <style name="AppTheme.Fullscreen.Base" parent="AppTheme">
        <item name="android:windowFullscreen">true</item>
        <item name="android:windowAnimationStyle">@style/windowAnimationStyle</item>
    </style>

    <style name="AppTheme.Fullscreen" parent="AppTheme.Fullscreen.Base">
    </style>

    <style name="AppTheme.TransStatusBar" parent="AppTheme.TransStatusBar.Base" />

    <style name="TextAppearance.Title" parent="@style/TextAppearance.AppCompat.Title">
        <item name="android:textSize">?attr/toolbarTitleSize</item>
        <item name="android:textColor">?attr/toolbarTitleColor</item>
    </style>

    <!--
    AlertDialog 专用的主题  都是充满窗体的主题
    parent Base.Theme.AppCompat.Light.Dialog.Alert
    Base.Theme.AppCompat.Light.Dialog.MinWidth
    Base.Theme.AppCompat.Light.Dialog.Fixed
    -->
    <style name="AppTheme.Dialog.Alert.Light" parent="Base.Theme.AppCompat.Light.Dialog.Alert">
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
    </style>

    <style name="AppTheme.Dialog.Alert.Base" parent="Base.Theme.AppCompat.Light.Dialog.Alert">
        <item name="android:windowFrame">@null</item>
        <item name="android:windowIsFloating">true</item>
        <item name="android:windowIsTranslucent">true</item>
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowBackground">@android:color/transparent</item>
    </style>

    <!--
    Base.Theme.AppCompat.Light.Dialog 可以自定义宽高
    -->
    <style name="AppTheme.Dialog.Base" parent="Base.Theme.AppCompat.Light.Dialog">
        <item name="android:windowFrame">@null</item>
        <item name="android:windowIsFloating">true</item>
        <item name="android:windowIsTranslucent">true</item>
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowBackground">@android:color/transparent</item>
    </style>

    <style name="AppTheme.Dialog" parent="AppTheme.Dialog.Base">

    </style>

    <style name="AppTheme.Dialog.InputMode" parent="AppTheme.Dialog">
        <item name="android:windowSoftInputMode">stateAlwaysHidden</item>
    </style>

    <style name="AppTheme.Dialog.Alert" parent="AppTheme.Dialog.Alert.Base">

    </style>

    <!--修改TabLayout的字体主题-->
    <style name="AppTheme.TabLayout.TextAppearance.Base" parent="TextAppearance.AppCompat.Widget.ActionBar.Title.Inverse">
        <item name="android:textSize">14sp</item>
        <item name="android:textAllCaps">true</item>
    </style>

    <style name="AppTheme.TabLayout.TextAppearance" parent="AppTheme.TabLayout.TextAppearance.Base">

    </style>


    <style name="AppTheme.Dialog.Dim" parent="AppTheme.Dialog.Base">
        <!-- 整个屏幕背景的灰度值：默认是黑色的 ：遮障层的灰度-->
        <item name="android:backgroundDimAmount">0</item>
        <!-- dialog的整个屏幕的背景是否有遮障层  当设置这个最后时，上边两行不起作用-->
        <item name="android:backgroundDimEnabled">false</item>
    </style>

    <!-- 中间渐显现弹窗style -->
    <style name="AnimFade" parent="@android:style/Animation">
        <item name="android:windowEnterAnimation">@anim/fade_in</item>
        <item name="android:windowExitAnimation">@anim/fade_out</item>
    </style>


    <!--1像素页面的Style-->
    <style name="SingleActivityStyle" parent="AppTheme">
        <!--透明属性-->
        <item name="android:windowIsTranslucent">true</item>
        <!-- 窗体背景颜色为透明 -->
        <item name="android:windowBackground">@android:color/transparent</item>
        <!-- 窗体没有边框 -->
        <item name="android:windowFrame">@null</item>
        <!-- 窗体不包含标题栏 -->
        <item name="android:windowNoTitle">true</item>
        <!-- 窗体悬浮 -->
        <item name="android:windowIsFloating">true</item>
        <!-- 自定义TitleBar时去掉多余的阴影-->
        <item name="android:windowContentOverlay">@null</item>
        <!-- 不允许窗体背景变暗-->
        <item name="android:backgroundDimEnabled">false</item>
        <!-- 窗体切换无动画-->
        <item name="android:windowAnimationStyle">@null</item>
        <!-- 禁用窗口的预览动画-->
        <item name="android:windowDisablePreview">true</item>
        <item name="android:windowNoDisplay">false</item>
    </style>
</resources>
